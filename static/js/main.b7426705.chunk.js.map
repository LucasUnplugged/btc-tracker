{"version":3,"sources":["shared/models/models.ts","shared/styles/colors.ts","shared/providers/ThemeProvider.tsx","shared/hooks/useTheme.tsx","components/Button/Button.tsx","components/Header/Header.tsx","shared/styles/GlobalStyles.tsx","components/Graph/Graph.reducer.ts","components/Graph/Graph.helpers.ts","shared/hooks/useMediaQuery.tsx","components/Graph/Graph.tsx","components/DeltaArrow/DeltaArrow.tsx","components/TrackerHeader/TrackerHeader.tsx","components/Tracker/Tracker.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ThemeMode","dark","black","error","neutral50","neutral100","neutral200","neutral300","neutral400","neutral500","neutral600","neutral700","neutral800","neutral900","primary50","primary100","primary200","primary300","primary400","primary500","primary600","primary700","primary800","primary900","success","white","light","convertHexToRGBA","hexCode","opacity","hex","replace","length","r","parseInt","substring","g","b","defaultMode","window","matchMedia","matches","baseTheme","color","font","body","code","fontSize","xs","sm","md","lg","xl","xxl","xxxl","lineHeight","padding","radius","none","full","ThemeContext","React","mode","setMode","theme","useTheme","isDark","toggleMode","localStorage","setItem","Button","props","children","onClick","title","width","ariaLabel","clickHandler","event","isButton","document","activeElement","type","detail","blur","aria-label","css","Header","Icon","RiSunLine","RiMoonLine","target","className","GlobalStyles","globalStyles","styles","dataReducer","state","action","averageCount","averageTotal","point","price","newAveragePoint","average","stock","getPriceTooltip","datum","formatPrice","formatTime","time","Date","toLocaleTimeString","timeStyle","formatPriceCompact","toLocaleString","style","currency","notation","useMediaQuery","query","setMatches","media","listener","addEventListener","removeEventListener","Graph","currentDate","initialDate","initialPrice","current","data","dispatcher","isViewXXXL","isViewXXL","isViewXL","isViewLG","isViewMD","isViewSM","isViewXS","isViewXXS","sizeMod","graphTheme","altNeutral","mainNeutral","textNeutral","colors","Object","entries","filter","includes","map","baseProps","height","colorScale","baseLabelStyles","fontFamily","fontWeight","letterSpacing","fill","stroke","centeredLabelStyles","textAnchor","area","labels","axis","strokeWidth","strokeLinecap","strokeLinejoin","axisLabel","grid","pointerEvents","ticks","size","tickLabels","chart","errorbar","borderWidth","group","histogram","legend","gutter","orientation","titleOrientation","line","tooltip","flyoutStyle","flyoutPadding","top","bottom","left","right","cornerRadius","pointerLength","getGraphTheme","graphPriceColor","timestamp","getTime","id","gradientTransform","offset","stopColor","animate","duration","onLoad","domain","x","y","scale","fixLabelOverlap","label","tickFormat","dependentAxis","labelComponent","interpolation","groupComponent","DeltaArrow","delta","arrow","isPlus","isMinus","plusColor","minusColor","equalColor","TrackerHeader","previous","titleStyles","subtitleStyles","end","formattingFn","start","interval","Tracker","getPrice","heartbeat","setHeartbeat","setInterval","clearInterval","isDemo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","modeChangeHandler","ev","newMode","localMode","getItem","Provider","value","setPrice","fetch","headers","Accept","response","json","source","rand","Math","random","parseFloat","amount","demoKeyHandler","key","shiftKey","ctrlKey","metaKey","console","log","getElementById"],"mappings":"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","file":"static/js/main.b7426705.chunk.js","sourcesContent":["import { VictoryThemeDefinition, ThemeBaseProps } from 'victory';\n\n// DATA MODELS ////////////////////////////////////////////////////////////////////////////////////\nexport interface StockDTO {\n  amount: string;\n  base: string;\n  currency: string;\n}\n\nexport interface CoinbaseDTO {\n  data: StockDTO;\n}\n\n// OTHER MODELS ///////////////////////////////////////////////////////////////////////////////////\nexport interface PriceState {\n  current: number;\n  delta: number;\n  previous: number;\n}\n\n// THEME MODELS ///////////////////////////////////////////////////////////////////////////////////\nexport interface Colors {\n  black: string;\n  error: string;\n  neutral50: string;\n  neutral100: string;\n  neutral200: string;\n  neutral300: string;\n  neutral400: string;\n  neutral500: string;\n  neutral600: string;\n  neutral700: string;\n  neutral800: string;\n  neutral900: string;\n  primary50: string;\n  primary100: string;\n  primary200: string;\n  primary300: string;\n  primary400: string;\n  primary500: string;\n  primary600: string;\n  primary700: string;\n  primary800: string;\n  primary900: string;\n  success: string;\n  white: string;\n}\n\nexport enum ThemeMode {\n  dark = 'dark',\n  light = 'light',\n}\n\nexport interface Sizes {\n  xs?: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl?: string;\n  xxl?: string;\n  xxxl?: string;\n}\n\nexport interface Radii extends Sizes {\n  full?: string;\n  none?: string;\n}\n\ninterface Fonts {\n  body: string;\n  code: string;\n}\n\nexport interface Theme {\n  color: Colors;\n  font: Fonts;\n  fontSize: Sizes;\n  lineHeight: Sizes;\n  padding: Sizes;\n  radius: Radii;\n}\n\nexport interface ThemeState {\n  isDark: boolean;\n  mode: ThemeMode;\n  theme: Theme;\n  toggleMode: () => void;\n}\n\n// GRAPH MODELS ///////////////////////////////////////////////////////////////////////////////////\ntype StyleableThemeProp = {\n  style?: {\n    data?: React.CSSProperties;\n    labels?: React.CSSProperties;\n  };\n} & ThemeBaseProps;\n\nexport interface GraphTheme extends VictoryThemeDefinition {\n  group?: StyleableThemeProp;\n  histogram?: StyleableThemeProp;\n}\n\nexport interface StockGraphPoint {\n  timestamp: number;\n  price: number;\n}\n\nexport type StockGraphData = StockGraphPoint[];\n","import { Colors } from '../models/models';\n\nexport const dark: Colors = {\n  black: '#030405',\n  error: '#fd5730',\n  neutral50: '#e5e5e6',\n  neutral100: '#c1c1c2',\n  neutral200: '#9a9a9b',\n  neutral300: '#6a6a70',\n  neutral400: '#484a54',\n  neutral500: '#282a36',\n  neutral600: '#242530',\n  neutral700: '#1e1f29',\n  neutral800: '#181922',\n  neutral900: '#0f0f16',\n  primary50: '#fae9ff',\n  primary100: '#e6c5ef',\n  primary200: '#d59fe1',\n  primary300: '#c67ad3',\n  primary400: '#b854c5',\n  primary500: '#a23aab',\n  primary600: '#792c86',\n  primary700: '#521f60',\n  primary800: '#2f113b',\n  primary900: '#110318',\n  success: '#10aa30',\n  white: '#f3f3f3',\n};\n\nexport const light: Colors = {\n  black: '#030405',\n  error: '#be1c0f',\n  neutral50: '#f7f7f8',\n  neutral100: '#dbdbdd',\n  neutral200: '#bdbec0',\n  neutral300: '#a0a2a6',\n  neutral400: '#838794',\n  neutral500: '#6a6e7b',\n  neutral600: '#525560',\n  neutral700: '#3b3d46',\n  neutral800: '#22252c',\n  neutral900: '#0b0d16',\n  primary50: '#fae9ff',\n  primary100: '#e6c5ef',\n  primary200: '#d59fe1',\n  primary300: '#c67ad3',\n  primary400: '#b854c5',\n  primary500: '#a23aab',\n  primary600: '#792c86',\n  primary700: '#521f60',\n  primary800: '#2f113b',\n  primary900: '#110318',\n  success: '#0f711a',\n  white: '#f3f3f3',\n};\n\nexport const convertHexToRGBA = (hexCode: string, opacity: number): string => {\n  let hex = hexCode.replace('#', '');\n\n  if (hex.length === 3) {\n    hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n  }\n\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  return `rgba(${r},${g},${b},${opacity / 100})`;\n};\n","import * as React from 'react';\nimport { Theme, ThemeMode } from '../models/models';\nimport { dark, light } from '../styles/colors';\n\n// Get system color mode as the default\nconst defaultMode =\n  window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n    ? ThemeMode.dark\n    : ThemeMode.light;\n\n// Base theme\nconst baseTheme = {\n  color: defaultMode === ThemeMode.dark ? dark : light,\n  font: {\n    body: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu',\n    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'`,\n    code: `'Fira Code', source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace`,\n  },\n  fontSize: {\n    xs: '11px',\n    sm: '12px',\n    md: '14px',\n    lg: '16px',\n    xl: '20px',\n    xxl: '27px',\n    xxxl: '36px',\n  },\n  lineHeight: {\n    sm: '1.1',\n    md: '1.3',\n    lg: '1.6',\n  },\n  padding: {\n    xs: '4px',\n    sm: '8px',\n    md: '12px',\n    lg: '16px',\n    xl: '20px',\n    xxl: '40px',\n  },\n  radius: {\n    none: 'none',\n    sm: '2px',\n    md: '4px',\n    lg: '8px',\n    full: '100%',\n  },\n};\n\ninterface ThemeContextState {\n  mode: ThemeMode;\n  setMode: (mode: ThemeMode) => void;\n  theme: Theme;\n}\n\nexport const ThemeContext = React.createContext<ThemeContextState>({\n  mode: defaultMode,\n  setMode: (mode: ThemeMode): void => {},\n  theme: baseTheme,\n});\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\n\nexport function ThemeProvider(props: ThemeProviderProps) {\n  const [mode, setMode] = React.useState<ThemeMode>(defaultMode);\n\n  const theme = React.useMemo((): Theme => {\n    const out: Theme = {\n      ...baseTheme,\n      color: mode === ThemeMode.dark ? dark : light,\n    };\n    return out;\n  }, [mode]);\n\n  React.useEffect(() => {\n    const modeChangeHandler = (ev: MediaQueryListEvent) => {\n      const newMode = ev.matches ? ThemeMode.dark : ThemeMode.light;\n      setMode(newMode);\n    };\n\n    const localMode = window.localStorage.getItem('mode');\n    localMode && setMode(localMode as ThemeMode);\n    // Watch for system change to the color mode\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', modeChangeHandler);\n    // Clean-up watcher\n    return () =>\n      window\n        .matchMedia('(prefers-color-scheme: dark)')\n        .removeEventListener('change', modeChangeHandler);\n  }, []);\n\n  return (\n    <ThemeContext.Provider value={{ mode, setMode, theme }}>{props.children}</ThemeContext.Provider>\n  );\n}\n","import * as React from 'react';\nimport { ThemeContext } from '../providers/ThemeProvider';\nimport { ThemeMode, ThemeState } from '../models/models';\n\nexport const useTheme = (): ThemeState => {\n  const { mode, setMode, theme } = React.useContext(ThemeContext);\n  const isDark = mode === ThemeMode.dark;\n\n  const toggleMode = React.useCallback((): void => {\n    if (mode === ThemeMode.light) {\n      window.localStorage.setItem('mode', ThemeMode.dark);\n      setMode(ThemeMode.dark);\n    } else {\n      window.localStorage.setItem('mode', ThemeMode.light);\n      setMode(ThemeMode.light);\n    }\n  }, [mode, setMode]);\n\n  return { isDark, mode, theme, toggleMode };\n};\n","import * as React from 'react';\nimport { css } from '@emotion/react';\nimport { useTheme } from '../../shared/hooks/useTheme';\n\ntype ClickEvent = React.MouseEvent<HTMLButtonElement, MouseEvent>;\n\ninterface ButtonProps {\n  children: string | React.ReactNode;\n  onClick: (event: ClickEvent) => void;\n  'aria-label'?: string;\n  title?: string;\n  width?: string;\n}\n\nexport default function Button(props: ButtonProps) {\n  const { children, onClick, title, width } = props;\n  const ariaLabel = props['aria-label'] ? props['aria-label'] : title;\n  const {\n    isDark,\n    theme: { color, fontSize, padding, radius },\n  } = useTheme();\n\n  const clickHandler: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(\n    (event: ClickEvent): void => {\n      const isButton = (document.activeElement as HTMLInputElement).type === 'button';\n      // If this was an actual click event, clear its focus, to avoid\n      // a \"sticky hover state\" effect.\n      if (event.detail && isButton) {\n        (document.activeElement as HTMLElement).blur();\n      }\n      onClick(event);\n    },\n    [onClick]\n  );\n\n  return (\n    <button\n      aria-label={ariaLabel}\n      css={css`\n        align-items: center;\n        background: none;\n        border: 2px solid transparent;\n        border-color: ${isDark ? color.primary300 : color.primary600};\n        border-radius: ${radius.lg};\n        color: ${isDark ? color.primary300 : color.primary600};\n        cursor: pointer;\n        display: flex;\n        font-weight: 500;\n        height: 40px;\n        padding: ${padding.sm} ${padding.xl};\n        font-size: ${fontSize.lg};\n        ${width ? `width: ${width};` : ''}\n\n        &:focus,\n        &:hover {\n          background: ${isDark ? color.primary300 : color.primary600};\n          color: ${isDark ? color.neutral600 : color.white};\n          outline: none;\n        }\n\n        .icon {\n          margin-right: ${padding.sm};\n        }\n      `}\n      onClick={clickHandler}\n      title={title}\n      type=\"button\"\n    >\n      {children}\n    </button>\n  );\n}\n","import { css } from '@emotion/react';\nimport { RiMoonLine, RiSunLine } from 'react-icons/ri';\nimport { useTheme } from '../../shared/hooks/useTheme';\nimport Button from '../Button/Button';\n\nexport default function Header() {\n  const {\n    isDark,\n    theme: { color, fontSize, padding },\n    toggleMode,\n  } = useTheme();\n  const Icon = isDark ? RiSunLine : RiMoonLine;\n  const target = isDark ? 'light' : 'dark';\n  const title = `Switch to ${target} mode`;\n\n  return (\n    <header\n      css={css`\n        align-items: center;\n        background: ${isDark ? color.neutral700 : color.neutral200};\n        display: flex;\n        justify-content: space-between;\n        padding: ${padding.xl} ${padding.xxl};\n      `}\n    >\n      <h1\n        css={css`\n          color: ${isDark ? color.neutral100 : color.neutral700};\n          line-height: ${fontSize.xxxl};\n          font-weight: 200;\n          margin: 0;\n        `}\n      >\n        Stock\n        <strong\n          css={css`\n            font-weight: 400;\n          `}\n        >\n          Tracker\n        </strong>\n      </h1>\n      <Button onClick={toggleMode} title={title} width=\"108px\">\n        <Icon className=\"icon\" /> {target}\n      </Button>\n    </header>\n  );\n}\n","import * as React from 'react';\nimport { Global, css } from '@emotion/react';\nimport { useTheme } from '../../shared/hooks/useTheme';\n\nexport default function GlobalStyles() {\n  const { isDark, theme } = useTheme();\n\n  const globalStyles = React.useMemo((): React.ReactNode => {\n    const { color, font, fontSize, lineHeight, padding } = theme;\n    return (\n      <Global\n        styles={css`\n          * {\n            box-sizing: border-box;\n            font-family: ${font.body};\n          }\n\n          *::selection {\n            background: ${color.primary500};\n            color: ${color.white};\n          }\n\n          html,\n          body,\n          p,\n          li,\n          a {\n            font-size: ${fontSize.md};\n            line-height: ${lineHeight.lg};\n          }\n\n          html,\n          body {\n            margin: 0;\n            padding: 0;\n          }\n\n          html {\n            background: ${isDark ? color.neutral500 : color.neutral100};\n          }\n\n          body {\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n            color: ${isDark ? color.white : color.neutral700};\n          }\n\n          code {\n            font-family: ${font.code};\n          }\n\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          h6,\n          a,\n          p {\n            margin: ${padding.xl} 0;\n          }\n\n          h1:first-of-type,\n          h2:first-of-type,\n          h3:first-of-type,\n          h4:first-of-type,\n          h5:first-of-type,\n          h6:first-of-type,\n          a:first-of-type,\n          p:first-of-type {\n            margin-top: 0;\n          }\n\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          h6 {\n            line-height: ${lineHeight.sm};\n          }\n\n          h1 {\n            font-size: ${fontSize.xxxl};\n          }\n\n          h2 {\n            font-size: ${fontSize.xxl};\n          }\n\n          h3 {\n            font-size: ${fontSize.xl};\n          }\n\n          h4 {\n            font-size: ${fontSize.lg};\n          }\n\n          a {\n            color: ${isDark ? color.primary300 : color.primary600};\n          }\n        `}\n      />\n    );\n  }, [isDark, theme]);\n\n  return <>{globalStyles}</>;\n}\n","import { StockGraphData, StockGraphPoint } from '../../shared/models/models';\n\ninterface DataAction {\n  type: 'ADD_DATA_POINT';\n  point: StockGraphPoint;\n}\ninterface GraphState {\n  averageCount: number;\n  averageTotal: number;\n  average: StockGraphData;\n  stock: StockGraphData;\n}\nexport type DataReducer = (state: GraphState, action: DataAction) => GraphState;\n\nexport const dataReducer: DataReducer = (state: GraphState, action: DataAction): GraphState => {\n  switch (action.type) {\n    case 'ADD_DATA_POINT':\n      const averageCount = state.averageCount + 1;\n      const averageTotal = state.averageTotal + action.point.price;\n      const newAveragePoint = {\n        ...action.point,\n        price: averageTotal / averageCount,\n      };\n      return {\n        averageCount,\n        averageTotal,\n        average: [...state.average, newAveragePoint],\n        stock: [...state.stock, action.point],\n      };\n\n    default:\n      // If nothing change, we return `state` to avoid a reference change\n      return state;\n  }\n};\n","import { GraphTheme, StockGraphPoint, Theme } from '../../shared/models/models';\n\nexport const getPriceTooltip = ({ datum }: { datum: StockGraphPoint }): string =>\n  formatPrice(datum.price);\n\nexport const formatTime = (time: number): string =>\n  new Date(time)\n    .toLocaleTimeString('en-US', { timeStyle: 'medium' })\n    .replace(/\\s([AaPp][Mm])/g, '');\n\n// Price formatter, which could be fully localized\nexport const formatPriceCompact = (price: number): string =>\n  price.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    notation: 'compact',\n  });\nexport const formatPrice = (price: number): string =>\n  price.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n\n// GRAPH STYLES /////////////////////////////////////////////////////////////////////////////////\nexport const getGraphTheme = (isDark: boolean, theme: Theme): GraphTheme => {\n  const { color, font } = theme;\n  // Colors\n  const altNeutral = isDark ? color.neutral400 : color.neutral300;\n  const mainNeutral = isDark ? color.neutral300 : color.neutral500;\n  const textNeutral = isDark ? color.neutral100 : color.neutral700;\n  const colors = Object.entries(color)\n    .filter(([name]: [string, string]): boolean => name.includes('primary'))\n    .map(([name, value]: [string, string]): string => value);\n  // Layout\n  const baseProps = {\n    width: 500,\n    height: 250,\n    padding: 40,\n    colorScale: colors,\n  };\n  // Labels\n  const baseLabelStyles = {\n    fontFamily: font.body,\n    fontSize: 10,\n    fontWeight: 300,\n    letterSpacing: 'normal',\n    padding: 10, //{ x: [5, 20], y: [20, 5] }\n    fill: mainNeutral,\n    stroke: 'transparent',\n  };\n  const centeredLabelStyles = { ...baseLabelStyles, textAnchor: 'middle' };\n  // Strokes\n  const strokeLinecap = 'round';\n  const strokeLinejoin = 'round';\n\n  // Return the theme\n  return {\n    area: {\n      ...baseProps,\n      style: {\n        data: {\n          fill: isDark ? color.primary500 : color.primary600,\n          stroke: isDark ? color.primary400 : color.primary600,\n        },\n        labels: baseLabelStyles,\n      },\n    },\n    axis: {\n      ...baseProps,\n      style: {\n        axis: {\n          fill: 'transparent',\n          stroke: altNeutral,\n          strokeWidth: 2,\n          strokeLinecap,\n          strokeLinejoin,\n        },\n        axisLabel: {\n          ...centeredLabelStyles,\n          padding: 25,\n        },\n        grid: {\n          fill: 'none',\n          stroke: 'none',\n          pointerEvents: 'painted',\n        },\n        ticks: {\n          fill: 'transparent',\n          size: 2,\n          // stroke: altNeutral,\n          stroke: 'transparent',\n        },\n        tickLabels: baseLabelStyles,\n      },\n    },\n    chart: baseProps,\n    errorbar: {\n      ...baseProps,\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: 'transparent',\n          stroke: mainNeutral,\n          strokeWidth: 2,\n        },\n        labels: baseLabelStyles,\n      },\n    },\n    group: {\n      ...baseProps,\n      colorScale: colors,\n    },\n    histogram: {\n      ...baseProps,\n      style: {\n        data: {\n          fill: altNeutral,\n          stroke: mainNeutral,\n          strokeWidth: 2,\n        },\n        labels: baseLabelStyles,\n      },\n    },\n    legend: {\n      colorScale: colors,\n      gutter: 10,\n      orientation: 'vertical',\n      titleOrientation: 'top',\n      style: {\n        data: {\n          type: 'circle',\n        },\n        labels: baseLabelStyles,\n        title: { ...baseLabelStyles, padding: 5 },\n      },\n    },\n    line: {\n      ...baseProps,\n      style: {\n        data: {\n          fill: 'transparent',\n          stroke: mainNeutral,\n          strokeWidth: 2,\n        },\n        labels: baseLabelStyles,\n      },\n    },\n    tooltip: {\n      style: { ...baseLabelStyles, fill: altNeutral, padding: 0, pointerEvents: 'none' },\n      flyoutStyle: {\n        stroke: 'transparent',\n        fill: textNeutral,\n        pointerEvents: 'none',\n      },\n      flyoutPadding: { top: 4, bottom: 4, left: 7, right: 7 },\n      cornerRadius: 2,\n      pointerLength: 6,\n    },\n  };\n};\n// END OF GRAPH STYLES //////////////////////////////////////////////////////////////////////////\n","import * as React from 'react';\n\nexport function useMediaQuery(query: string) {\n  const [matches, setMatches] = React.useState(false);\n\n  React.useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addEventListener('change', listener);\n    return () => media.removeEventListener('change', listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","import * as React from 'react';\nimport { css } from '@emotion/react';\nimport { GraphTheme, PriceState, StockGraphPoint } from '../../shared/models/models';\nimport { dataReducer, DataReducer } from './Graph.reducer';\nimport {\n  VictoryArea,\n  VictoryChart,\n  VictoryClipContainer,\n  VictoryGroup,\n  VictoryScatter,\n  VictoryTooltip,\n} from 'victory';\nimport { useTheme } from '../../shared/hooks/useTheme';\nimport { formatPriceCompact, formatTime, getGraphTheme, getPriceTooltip } from './Graph.helpers';\nimport { convertHexToRGBA } from '../../shared/styles/colors';\nimport { VictoryAxis } from 'victory';\nimport { useMediaQuery } from '../../shared/hooks/useMediaQuery';\n\ninterface GraphProps {\n  currentDate: number;\n  initialDate: number;\n  price: PriceState;\n}\n\nexport default function Graph(props: GraphProps) {\n  const { currentDate, initialDate, price } = props;\n  const initialPrice = React.useRef<number>(price.current);\n  const [data, dispatcher] = React.useReducer<DataReducer>(dataReducer, {\n    averageCount: 0,\n    averageTotal: 0,\n    average: [],\n    stock: [],\n  });\n  const {\n    isDark,\n    theme,\n    theme: { color },\n  } = useTheme();\n\n  // Calculate size modifier for different viewport sizes\n  const isViewXXXL = useMediaQuery('(min-width: 1500px)');\n  const isViewXXL = useMediaQuery('(min-width: 1250px)');\n  const isViewXL = useMediaQuery('(min-width: 1100px)');\n  const isViewLG = useMediaQuery('(min-width: 1000px)');\n  const isViewMD = useMediaQuery('(min-width: 900px)');\n  const isViewSM = useMediaQuery('(min-width: 800px)');\n  const isViewXS = useMediaQuery('(min-width: 700px)');\n  const isViewXXS = useMediaQuery('(min-width: 600px)');\n  const sizeMod = isViewXXXL\n    ? 0.75\n    : isViewXXL\n    ? 0.9\n    : isViewXL\n    ? 1.1\n    : isViewLG\n    ? 1.3\n    : isViewMD\n    ? 1.5\n    : isViewSM\n    ? 1.7\n    : isViewXS\n    ? 1.9\n    : isViewXXS\n    ? 2.1\n    : 2.3;\n  const rightPadding = 35;\n  const graphTheme = React.useMemo((): GraphTheme => getGraphTheme(isDark, theme), [isDark, theme]);\n  const graphPriceColor = React.useMemo(\n    (): string => (isDark ? color.primary500 : color.primary600),\n    [color, isDark]\n  );\n  const tooltip = React.useMemo(\n    (): React.ReactElement => (\n      <VictoryTooltip\n        style={{\n          fill: isDark ? color.primary800 : color.neutral100,\n          fontSize: 9 * sizeMod,\n          pointerEvents: 'none',\n        }}\n        flyoutStyle={{\n          fill: convertHexToRGBA(isDark ? color.neutral100 : color.neutral800, 90),\n          pointerEvents: 'none',\n          stroke: 'transparent',\n        }}\n        flyoutPadding={{\n          top: 4 * sizeMod,\n          bottom: 4 * sizeMod,\n          left: 7 * sizeMod,\n          right: 7 * sizeMod,\n        }}\n        cornerRadius={2 * sizeMod}\n        pointerLength={6 * sizeMod}\n      />\n    ),\n    [color, isDark, sizeMod]\n  );\n\n  React.useEffect((): void => {\n    const point: StockGraphPoint = {\n      price: price.current,\n      timestamp: new Date().getTime(),\n    };\n    dispatcher({ type: 'ADD_DATA_POINT', point });\n  }, [price]);\n\n  return (\n    <figure\n      css={css`\n        margin: 0 calc(${106 + 4 * sizeMod}px - ${(rightPadding * sizeMod) / 5}%) 0 0;\n        padding: 0;\n      `}\n    >\n      {/* CHART GRADIENTS */}\n      <svg\n        css={css`\n          height: 0;\n          pointer-events: none;\n          position: absolute;\n          visibility: hidden;\n        `}\n      >\n        <defs>\n          <linearGradient id=\"average-gradient\" gradientTransform=\"rotate(90)\">\n            <stop offset=\"0%\" stopColor={convertHexToRGBA(color.neutral400, 50)} />\n            <stop offset=\"100%\" stopColor={convertHexToRGBA(color.neutral400, 0)} />\n          </linearGradient>\n          <linearGradient id=\"price-gradient\" gradientTransform=\"rotate(90)\">\n            <stop offset=\"0%\" stopColor={convertHexToRGBA(graphPriceColor, 50)} />\n            <stop offset=\"100%\" stopColor={convertHexToRGBA(graphPriceColor, 0)} />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      {/* CHART */}\n      <VictoryChart\n        animate={{ duration: 0, onLoad: { duration: 500 } }}\n        domain={{\n          x: [initialDate, currentDate],\n          y: [initialPrice.current / 1.25, initialPrice.current * 1.25],\n        }}\n        height={245 * sizeMod}\n        padding={{\n          top: 20 * sizeMod,\n          bottom: 30 * sizeMod,\n          left: 15 * sizeMod,\n          right: rightPadding * sizeMod,\n        }}\n        scale={{ x: 'time' }}\n        theme={graphTheme}\n      >\n        {/* CHART AXIS */}\n        <VictoryAxis\n          fixLabelOverlap\n          label=\"Time\"\n          style={{\n            axisLabel: { fontSize: 7 * sizeMod, fontWeight: 500, padding: 20 * sizeMod },\n            tickLabels: { fontSize: 7 * sizeMod, padding: 5 * sizeMod },\n          }}\n          tickFormat={formatTime}\n        />\n        <VictoryAxis\n          dependentAxis\n          orientation=\"right\"\n          style={{\n            tickLabels: { fontSize: 7 * sizeMod, padding: 5 * sizeMod },\n          }}\n          tickFormat={formatPriceCompact}\n        />\n\n        {/* STACK OF CHART ELEMENTS */}\n        <VictoryGroup\n          data={data.average}\n          labelComponent={tooltip}\n          labels={getPriceTooltip}\n          style={{\n            data: { strokeWidth: sizeMod },\n          }}\n          x=\"timestamp\"\n          y=\"price\"\n        >\n          <VictoryArea\n            style={{\n              data: {\n                fill: 'url(#average-gradient)',\n                stroke: isDark ? color.neutral400 : color.neutral300,\n              },\n            }}\n            interpolation=\"catmullRom\"\n          />\n        </VictoryGroup>\n        <VictoryGroup\n          data={data.stock}\n          labelComponent={tooltip}\n          labels={getPriceTooltip}\n          style={{\n            data: { strokeWidth: sizeMod },\n          }}\n          x=\"timestamp\"\n          y=\"price\"\n        >\n          <VictoryArea\n            style={{\n              data: { fill: 'url(#price-gradient)' },\n            }}\n          />\n          <VictoryScatter\n            groupComponent={<VictoryClipContainer />}\n            size={3 * sizeMod}\n            style={{\n              data: {\n                fill: 'transparent',\n              },\n            }}\n          />\n        </VictoryGroup>\n      </VictoryChart>\n    </figure>\n  );\n}\n","import * as React from 'react';\nimport { css } from '@emotion/react';\nimport { useTheme } from '../../shared/hooks/useTheme';\n\ninterface DeltaArrowProps {\n  delta: number;\n}\n\nexport default function DeltaArrow(props: DeltaArrowProps) {\n  const { delta } = props;\n  const {\n    isDark,\n    theme: { color },\n  } = useTheme();\n\n  const arrow = React.useMemo((): React.ReactNode => {\n    const isPlus = delta > 0;\n    const isMinus = delta < 0;\n    const plusColor = color.success;\n    const minusColor = color.error;\n    const equalColor = isDark ? color.neutral200 : color.neutral500;\n    const title = isPlus\n      ? 'Price trending up'\n      : isMinus\n      ? 'Price trending down'\n      : 'Price trend is unchanged';\n    return (\n      <div\n        aria-label={title}\n        title={title}\n        css={css`\n          align-items: center;\n          display: flex;\n          height: 90px;\n          justify-content: center;\n          margin-right: 9px;\n          position: relative;\n          width: 90px;\n\n          @media (prefers-reduced-motion: no-preference) {\n            &,\n            span {\n              transition: 0.2s ease-in;\n            }\n          }\n\n          span {\n            ${isPlus\n              ? `background: ${plusColor};`\n              : isMinus\n              ? `background: ${minusColor};`\n              : `background: ${equalColor};`}\n            border-radius: 3px;\n            bottom: 39%;\n            display: block;\n            height: 3px;\n            left: 25%;\n            position: absolute;\n            width: 27px;\n\n            &:nth-of-type(2) {\n              left: 45%;\n            }\n\n            &:nth-of-type(3) {\n              bottom: 58%;\n            }\n\n            &:nth-of-type(4) {\n              left: 45%;\n              bottom: 58%;\n            }\n          }\n        `}\n      >\n        <span\n          css={css`\n            transform: ${isPlus ? 'rotate(-45deg)' : isMinus ? 'rotate(45deg)' : 'rotate(0deg)'};\n          `}\n        />\n        <span\n          css={css`\n            transform: ${isPlus ? 'rotate(45deg)' : isMinus ? 'rotate(-45deg)' : 'rotate(0deg)'};\n          `}\n        />\n        <span\n          css={css`\n            transform: ${isPlus ? 'rotate(135deg)' : isMinus ? 'rotate(225deg)' : 'rotate(180deg)'};\n          `}\n        />\n        <span\n          css={css`\n            transform: ${isPlus\n              ? 'rotate(-135deg)'\n              : isMinus\n              ? 'rotate(-225deg)'\n              : 'rotate(-180deg)'};\n          `}\n        />\n      </div>\n    );\n  }, [color, delta, isDark]);\n\n  return <>{arrow}</>;\n}\n","import * as React from 'react';\nimport { css } from '@emotion/react';\nimport { useTheme } from '../../shared/hooks/useTheme';\nimport { PriceState } from '../../shared/models/models';\nimport CountUp from 'react-countup';\nimport DeltaArrow from '../DeltaArrow/DeltaArrow';\nimport { formatPriceCompact, formatPrice } from '../Graph/Graph.helpers';\n\nconst COUNTER_DURATION = 0.5;\n\ninterface TrackerHeaderProps {\n  price: PriceState;\n}\n\nexport default function TrackerHeader(props: TrackerHeaderProps) {\n  const {\n    price: { current, delta, previous },\n  } = props;\n  const {\n    isDark,\n    theme: { color, padding },\n  } = useTheme();\n\n  // COMPOSABLE STYLES ////////////////////////////////////////////////////////////////////////////\n  const titleStyles = css`\n    font-size: 50px;\n    font-weight: 700;\n    margin-bottom: ${padding.sm};\n  `;\n  const subtitleStyles = css`\n    font-size: 24px;\n    font-weight: 200;\n    margin: 0;\n  `;\n  // END OF COMPOSABLE STYLES /////////////////////////////////////////////////////////////////////\n\n  return (\n    <header\n      css={css`\n        display: flex;\n        justify-content: space-between;\n        @media (max-width: 680px) {\n          flex-direction: column;\n        }\n      `}\n    >\n      <section\n        css={css`\n          @media (max-width: 680px) {\n            text-align: right;\n            margin: 0 139px ${padding.xxl} 0;\n          }\n        `}\n      >\n        <h2 css={titleStyles}>\n          BTC\n          <span\n            css={css`\n              font-weight: 300;\n              margin-left: ${padding.lg};\n            `}\n          >\n            Bitcoin\n          </span>\n        </h2>\n        <h3 css={subtitleStyles}>In USD</h3>\n      </section>\n      <section\n        css={css`\n          display: flex;\n          @media (max-width: 680px) {\n            justify-content: flex-end;\n          }\n        `}\n      >\n        <div\n          css={css`\n            border-right: 2px solid ${isDark ? color.neutral400 : color.neutral200};\n            margin-right: 8px;\n            padding-right: 30px;\n          `}\n        >\n          <h2 css={titleStyles}>\n            {/* Provide \"reduced motion\" alternatives, for improved accessibility */}\n            <span\n              css={css`\n                display: inline-block;\n                @media (prefers-reduced-motion: no-preference) {\n                  display: none;\n                }\n              `}\n            >\n              {formatPriceCompact(current)}\n            </span>\n            <CountUp\n              css={css`\n                display: none;\n                @media (prefers-reduced-motion: no-preference) {\n                  display: inline-block;\n                }\n              `}\n              duration={COUNTER_DURATION}\n              end={current}\n              formattingFn={formatPriceCompact}\n              start={previous}\n            />\n          </h2>\n          <h3\n            css={css`\n              ${subtitleStyles};\n              display: flex;\n              justify-content: flex-end;\n            `}\n          >\n            {/* Provide \"reduced motion\" alternatives, for improved accessibility */}\n            <span\n              css={css`\n                display: inline-block;\n                @media (prefers-reduced-motion: no-preference) {\n                  display: none;\n                }\n              `}\n            >\n              {formatPrice(current)}\n            </span>\n            <CountUp\n              css={css`\n                display: none;\n                @media (prefers-reduced-motion: no-preference) {\n                  display: inline-block;\n                }\n              `}\n              duration={COUNTER_DURATION}\n              end={current}\n              formattingFn={formatPrice}\n              start={previous}\n            />\n          </h3>\n        </div>\n        <DeltaArrow delta={delta} />\n      </section>\n    </header>\n  );\n}\n","import { css } from '@emotion/react';\nimport * as React from 'react';\nimport { useTheme } from '../../shared/hooks/useTheme';\nimport { PriceState } from '../../shared/models/models';\nimport Graph from '../Graph/Graph';\nimport TrackerHeader from '../TrackerHeader/TrackerHeader';\n\nconst HEARTBEAT_DELAY = 3750; // 16 per minute\nlet interval: ReturnType<typeof setInterval>;\n\ninterface TrackerProps {\n  getPrice: () => void;\n  price: PriceState;\n}\n\nexport default function Tracker(props: TrackerProps) {\n  const { getPrice, price } = props;\n  const {\n    theme: { padding },\n  } = useTheme();\n  const initialDate = React.useRef<number>(new Date().getTime() - 60000);\n  const [heartbeat, setHeartbeat] = React.useState<number>(new Date().getTime());\n\n  // Live update heartbeat\n  React.useEffect((): (() => void) => {\n    // Start the heartbeat when this component mounts\n    interval = setInterval((): void => {\n      setHeartbeat(new Date().getTime());\n    }, HEARTBEAT_DELAY);\n    // And stop it when this component is unmounting\n    return (): void => clearInterval(interval);\n  }, []);\n\n  React.useEffect(getPrice, [getPrice, heartbeat]);\n\n  return (\n    <article\n      css={css`\n        padding: ${padding.xxl};\n      `}\n    >\n      <TrackerHeader price={price} />\n      <Graph currentDate={heartbeat} initialDate={initialDate.current} price={price} />\n    </article>\n  );\n}\n","import * as React from 'react';\nimport Header from '../Header/Header';\nimport GlobalStyles from '../../shared/styles/GlobalStyles';\nimport Tracker from '../Tracker/Tracker';\nimport { CoinbaseDTO, PriceState } from '../../shared/models/models';\n\nlet isDemo = false;\n\nexport default function App() {\n  const [price, setPrice] = React.useState<PriceState>();\n\n  const getPrice = React.useCallback((): void => {\n    fetch(isDemo ? 'response.json' : 'https://api.coinbase.com/v2/prices/BTC-USD/buy', {\n      headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n    })\n      .then((response: Response): Promise<CoinbaseDTO> => response.json())\n      .then((source: CoinbaseDTO): void => {\n        setPrice(\n          (state?: PriceState): PriceState => {\n            const rand = Math.random();\n            const current = isDemo ? 58000 + rand * 4000 : parseFloat(source.data.amount);\n            const previous = state?.current ?? current;\n            return {\n              current,\n              delta: current - previous,\n              previous,\n            };\n          }\n        );\n      });\n  }, []);\n\n  React.useEffect((): (() => void) => {\n    const demoKeyHandler = (event: KeyboardEvent) => {\n      if (event.key === 'e' && event.shiftKey && (event.ctrlKey || event.metaKey)) {\n        console.log(isDemo ? 'Switching to live data' : 'Switching to mocked demo data');\n        isDemo = !isDemo;\n      }\n    };\n    window.addEventListener('keydown', demoKeyHandler);\n    return (): void => {\n      window.removeEventListener('keydown', demoKeyHandler);\n    };\n  }, []);\n\n  // Initial price fetch\n  React.useEffect((): void => {\n    getPrice();\n  }, [getPrice]);\n\n  return (\n    <main>\n      <GlobalStyles />\n      <Header />\n      {price && <Tracker getPrice={getPrice} price={price} />}\n    </main>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from './shared/providers/ThemeProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}